= open_graph_and_meta_tags type: "article",
                           title: @episode.headline.blank? ? @episode.title : @episode.headline,
                           page_title: @episode.title,
                           description: @episode.social_description || @episode.description,
                           image: @episode.image.url,
                           url: episode_url(@episode, ref: "fb", protocol: "http")

%article.episode{id: @episode.slug, class: @episode.state, data: { uri: episode_path(@episode, format: :json), poll: 5.seconds, state: @episode.state }}
  %section.header-content.full-width
    %section.container-fluid
      %div.row-fluid.page-header
        %div.span12
          %a.page-header-logo.hidden-phone.hidden-tablet{href: root_path}
            = image_tag "logo.png"
          %div.page-header-title
            = breadcrumbs :root, Episode, @episode
            %h1= @episode.headline.present? ? @episode.headline : @episode.title

            %span.muted.attribution
              = @episode.headline.present? ? @episode.title : t(:tag)
              |
              %time(pubdate="pubdate")= @episode.published_at.strftime("%m/%d/%Y")

  %section.main-content
    %section.container-fluid
      %div.row-fluid.play-and-share
        %div.span8{style: "border-right: 1px solid #ddd; padding-right: 2.5641%; padding-top: 30px"}
          = play_controls style: "full", episode: @episode

          %div.row-fluid.play-and-share
            %div.span12

              %section.body
                - unless @episode.filepicker_images.blank?
                  %ul.image-gallery.unstyled.pull-left.span3
                    - @episode.filepicker_images.split(',').each do |i|
                      %li
                        = link_to i do
                          = filepicker_image_tag i, w: 125, h: 125, fit: :crop
                = raw @episode.description


              - if @episode.topics.any?
                %section.topics
                  %strong Topics:
                  %p= comma_separated_list_of @episode.topics

              - unless @episode.show_notes.blank?
                %h3 Show Notes
                %div.show-notes= raw @episode.show_notes

          %div.row-fluid.guests-and-host
            %div.span12
              - if @episode.guests.any?
                %h3 Featuring
                - @episode.guests.in_groups_of 2 do |group|
                  %div.row-fluid
                    %div.span6= render group[0]
                    %div.span6= render group[1] unless group[1].nil?

              - unless @episode.host.blank?
                %div.row-fluid
                  %div.span6
                    %h3 Host
                    = render @episode.host
                  - if ( org = Organization.where(name: "MoveOn.org").first ).present?
                    %div.span6
                      %h3 Powered By
                      = render org

          %div.row-fluid.other-episodes
            %div.span6
              - if @episode.prev.present?
                %a.prev{href: episode_path(@episode.prev), title: "Previous Episode", data: { track: %{"Episode" : "#{@episode.prev.slug}"} }}
                  %i.icon-chevron-left
                  = @episode.prev.title

            %div.span6
              - if @episode.next.present?
                %a.next{href: episode_path(@episode.next), title: "Next Episode", data: { track: %{"Episode" : "#{@episode.next.slug}"} }}
                  = @episode.next.title
                  %i.icon-chevron-right

          - if comments_enabled?
            %div.row-fluid.comments
              %div.span12
                %section.comments
                  = livefyre_comments

        %div.span4
          %div.subscribe-join-social.subscribe-vertical.apply-affix
            = subscribe_join_social orientation: :vertical, share: @episode
