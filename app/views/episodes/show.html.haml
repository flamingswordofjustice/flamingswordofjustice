= open_graph_and_meta_tags type: "article",
                           title: @episode.headline.blank? ? @episode.title : @episode.headline,
                           page_title: @episode.title,
                           description: @episode.social_description || @episode.description,
                           image: @episode.image.url,
                           url: @canonical_fb_url

- content_for :head do
  %meta{name: "player", content: ( @player || "a" ) == "a" ? "audio" : "youtube"}

%article.episode{id: @episode.slug, class: @episode.state, data: { uri: episode_path(@episode, format: :json), poll: 5.seconds, state: @episode.state }}
  = page_header @episode.page_headline,
    crumbs: [:root, Episode, @episode],
    subtitle: @episode.sub_headline,
    time: @episode.published_at

  / = render partial: "episodes/modal"

  %div.row-fluid.play-and-share
    %div.span8
      %div.share-buttons.container-fluid
        %div.span4
          %a.facebook{href: "http://facebook.com/sharer.php?u=#{@canonical_fb_url}", target: "_blank", data: {url: @canonical_fb_url}}
            %i.icon-facebook
            %h3 Share this
        %div.span4
          %a.twitter{href: "http://twitter.com/intent/tweet?" + twitter_share_attrs(text: @episode.default_twitter_text, url: @episode.canonical_short_link || @episode_url).to_param, target: "_blank"}
            %i.icon-twitter
            %h3 Tweet this
        %div.span4
          %a.subscribe{href: itunes_link, title: "iTunes", data: { track: true }}
            %i.icon-music
            %h3 Subscribe

      = play_controls style: "full", episode: @episode, episode_url: @canonical_fb_url, player: @player
    %div.span4
      %div.subscribe-join-social.subscribe-vertical.apply-affix
        = subscribe_join_social orientation: :vertical, share: @episode

  %div.row-fluid.episode-and-image
    %div.span8
      %section.body
        = raw @episode.description

      - if @episode.topics.any?
        %section.topics
          %strong Topics:
          %p= comma_separated_list_of @episode.topics

  - unless @episode.filepicker_images.blank?
    %div.row-fluid.image-gallery
      %div.span8
        - @episode.filepicker_images.split(',').each do |i|
          = link_to i do
            = filepicker_image_tag i, w: 125, h: 125, fit: :crop

  - unless @episode.show_notes.blank?
    %div.row-fluid
      %div.span8
        %h3 Show Notes
        %div.show-notes= raw @episode.show_notes


  - if @episode.guests.any?
    %div.row-fluid
      %div.span8
        %h3 Featuring
    - @episode.guests.in_groups_of 2 do |group|
      %div.row-fluid
        %div.span4= render group[0]
        %div.span4= render group[1] unless group[1].nil?

  - unless @episode.host.blank?
    %div.row-fluid
      %div.span4
        %h3 Host
        = render @episode.host
      - if ( org = Organization.where(name: "MoveOn.org").first ).present?
        %div.span4
          %h3 Powered By
          = render org

  = divider 8

  %div.row-fluid.other-episodes
    %div.span4
      - if @episode.prev.present?
        %a.prev{href: episode_path(@episode.prev), title: "Previous Episode", data: { track: %{"Episode" : "#{@episode.prev.slug}"} }}
          %i.icon-chevron-left
          = @episode.prev.title

    %div.span4
      - if @episode.next.present?
        %a.next{href: episode_path(@episode.next), title: "Next Episode", data: { track: %{"Episode" : "#{@episode.next.slug}"} }}
          = @episode.next.title
          %i.icon-chevron-right

  - if comments_enabled?
    %div.row-fluid.comments
      %div.span8
        %section.comments
          = livefyre_comments
